name: integrate

on:
  pull_request:
    branches: [main]
    paths-ignore:
      - "resources/**"
      - "*.md"
      - "CODEOWNERS"
      - "package.json"
      - "sfdx-project.json"
      - "config/**"

# Manage concurrency to stop running jobs and start new ones in case of new commit pushed
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  formatting-and-linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Set environment variables
        run: |
          echo "SF_DISABLE_AUTOUPDATE=true" >> $GITHUB_ENV
          echo "SF_DISABLE_SOURCE_MEMBER_POLLING=true" >> $GITHUB_ENV
          echo "SF_DISABLE_TELEMETRY=true" >> $GITHUB_ENV

      - name: Install SFDX CLI
        run: npm install --global @salesforce/cli@${{ vars.SFDX_VERSION }}

      - name: Install npm dependencies
        run: npm install

      - name: Code formatting verification with Prettier
        run: npm run prettier:verify

      - name: Apex static analysis
        run: npm run lint:apex
        

      - name: Check documentation writing
        run: npm run lint:doc

  integrate:
    uses: ./.github/workflows/build.yml
    secrets: inherit

  create-namespaced-package-version:
    uses: ./.github/workflows/create-package-version.yml
    needs: [integrate, formatting-and-linting]
    with:
      packageAlias: Apex Mockery NS Test
    secrets: inherit

  validate-namespace-compatibility:
    uses: ./.github/workflows/validate-namespace-compatibility.yml
    needs: create-namespaced-package-version
    with:
      packageId: ${{ needs.create-namespaced-package-version.outputs.packageId }}
    secrets: inherit

  create-package-version:
    uses: ./.github/workflows/create-package-version.yml
    needs: [integrate, formatting-and-linting]
    with:
      packageAlias: Apex Mockery
    secrets: inherit

  validate-package-version:
    uses: ./.github/workflows/validate-package-version.yml
    needs: create-package-version
    with:
      packageId: ${{ needs.create-package-version.outputs.packageId }}
    secrets: inherit

  commit-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v6
        continue-on-error: true

  pr-lint:
    permissions:
      pull-requests: read
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ github.token }}
